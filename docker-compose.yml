version: "3.9"

services:
  django:
    container_name: django
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile
    expose:
      - 8080
    depends_on:
      - db
      - cache
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             bash gunicorn.sh"
    networks:
      - nginx_network
      - db_network
      - cache_network
    environment:
      PG_NAME: postgres
      PG_USER: postgres
      PG_HOST: db
      PG_PORT: "5432"
      PG_PASSWORD: postgres
      SECRET_KEY: weofjweifjewifjewifjewfewf
      DEBUG: "0"
      ALLOWED_HOSTS: "*"
      REDIS_HOST: "cache"
      REDIS_PORT: "6379"
      POSTS_TO_LOAD: "20"
      MESSAGES_TO_LOAD: "30"
      DATETIME_FORMAT: "%Y-%m-%d %H:%M"

  fastapi:
    container_name: fastapi
    restart: unless-stopped
    environment:
      PG_NAME: postgres
      PG_USER: postgres
      PG_HOST: db
      PG_PORT: "5432"
      PG_PASSWORD: postgres
    build:
      context: .
      dockerfile: ./dockerfiles/fastapi/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - db
    command: >
      sh -c "fastapi run --workers 1 --port 8080 app/main.py"
    networks:
      - nginx_network
      - db_network

  cache:
    container_name: cache
    restart: unless-stopped
    image: redis:7.2-alpine 
    expose:
      - 6379
    command: redis-server
    volumes: 
      - cache:/data
    networks:
      - cache_network

  db:
    container_name: db
    image: postgres:16.3-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - .:/docker-entrypoint-initdb.d
    expose:
      - 5432
    networks:
      - db_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  client:
    container_name: client
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./dockerfiles/react/Dockerfile
    ports:
      - 80:80
    depends_on:
      - django
    networks:
      - nginx_network

volumes:
  postgres-data:
  cache:
    driver: local

networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge
  cache_network:
    driver: bridge